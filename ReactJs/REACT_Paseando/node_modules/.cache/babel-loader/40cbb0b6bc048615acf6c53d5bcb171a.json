{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jamesgiraldo/Descargas/Evaluaciones_Next_U/27-01-2021/REACT_Lester_Toledo/src/Busqueda.js\";\nimport React from \"react\";\nimport './Busqueda.css';\nimport Imagenes from \"./Imagenes\";\nimport Horario from \"./Horario\";\nimport Rating from \"./Rating\";\nimport Comentarios from \"./Comentarios\";\nimport Datos from \"./Datos\";\nimport Lugares from \"./Lugares\";\nimport Destino from \"./Destino\";\n\nclass Busqueda extends React.Component {\n  constructor(props) {\n    super(props);\n    this.map = '';\n    this.service = '';\n    this.directionsService = '';\n    this.directionsRender = '';\n    this.start = '';\n    this.marker = [];\n\n    this.addMarker = (lat, lng) => {\n      let defineMarker = new this.google.maps.Marker({\n        position: new this.google.maps.LatLng(lat, lng),\n        map: this.map\n      });\n      this.marker.push(defineMarker);\n    };\n\n    this.buscar = (name, e) => {\n      const request = {\n        query: name,\n        fields: ['place_id']\n      };\n      this.service.findPlaceFromQuery(request, (result, status) => {\n        if (status === this.google.maps.places.PlacesServiceStatus.OK) {\n          const request_details = {\n            placeId: result[0].place_id,\n            fields: ['name', 'photo', 'formatted_address', 'rating', 'opening_hours', 'review', 'geometry']\n          };\n          this.service.getDetails(request_details, (results, status) => {\n            if (status === this.google.maps.places.PlacesServiceStatus.OK) {\n              this.setState({\n                name: results.name,\n                address: results.formatted_address,\n                location: results.geometry.location,\n                hours: results.hasOwnProperty('opening_hours') ? results.opening_hours.weekday_text : \"\",\n                rating: results.rating,\n                reviews: results.reviews,\n                photos: results.photos,\n                places: '',\n                viewPlaces: false\n              });\n              this.addMarker(this.state.location.lat(), this.state.location.lng());\n              this.clearMarker();\n            }\n          });\n        }\n      });\n    };\n\n    this.clearMarker = () => {\n      let length;\n\n      if (this.marker.length > 2) {\n        length = this.marker.length - 2;\n        this.marker[length].visible = false;\n        this.marker.splice(length, 1);\n      }\n    };\n\n    this.buscarLugaresCercanos = () => {\n      const request = {\n        location: this.state.location ? this.state.location : new this.google.maps.LatLng(this.props.lat, this.props.lng),\n        radius: '1000'\n      };\n      return new Promise(resolve => {\n        this.service.nearbySearch(request, (results, status) => {\n          if (status === this.google.maps.places.PlacesServiceStatus.OK) {\n            this.setState({\n              places: results,\n              viewPlaces: true\n            });\n            resolve(\"ok\");\n          }\n        });\n      });\n    };\n\n    this.calcDestino = (mode, e) => {\n      this.directionsRender.setMap(this.map);\n      const end = this.state.location;\n      const request = {\n        origin: this.start,\n        destination: end,\n        travelMode: mode\n      };\n      this.directionsService.route(request, (result, status) => {\n        if (status === \"OK\") {\n          this.directionsRender.setDirections(result);\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      address: '',\n      location: '',\n      hours: '',\n      rating: '',\n      places: '',\n      viewPlaces: false,\n      photos: '',\n      reviews: ''\n    };\n  }\n\n  componentDidMount() {\n    const googlePlaceAPILoad = setInterval(() => {\n      if (window.google) {\n        this.google = window.google;\n        clearInterval(googlePlaceAPILoad);\n        console.log('Load Place API');\n        this.map = new this.google.maps.Map(document.getElementById('map'), {\n          center: new this.google.maps.LatLng(this.props.lat, this.props.lng),\n          zoom: 14\n        });\n        this.marker = [];\n        this.addMarker(this.props.lat, this.props.lng);\n        this.service = new this.google.maps.places.PlacesService(this.map);\n        this.directionsService = new this.google.maps.DirectionsService();\n        this.directionsRender = new this.google.maps.DirectionsRenderer();\n        this.start = new this.google.maps.LatLng(this.props.lat, this.props.lng);\n      }\n\n      ;\n    }, 100);\n  }\n\n  render() {\n    let datos, galeria, horario, comentarios, rating, destino;\n\n    if (this.state.name) {\n      datos = /*#__PURE__*/_jsxDEV(Datos, {\n        name: this.state.name,\n        address: this.state.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 22\n      }, this);\n    }\n\n    if (this.state.photos) {\n      galeria = /*#__PURE__*/_jsxDEV(Imagenes, {\n        photos: this.state.photos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 24\n      }, this);\n    }\n\n    if (this.state.hours) {\n      horario = /*#__PURE__*/_jsxDEV(Horario, {\n        hours: this.state.hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 24\n      }, this);\n    }\n\n    if (this.state.rating) {\n      rating = /*#__PURE__*/_jsxDEV(Rating, {\n        rating: this.state.rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }, this);\n    }\n\n    if (this.state.reviews) {\n      comentarios = /*#__PURE__*/_jsxDEV(Comentarios, {\n        reviews: this.state.reviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 28\n      }, this);\n    }\n\n    if (this.state.location) {\n      destino = /*#__PURE__*/_jsxDEV(Destino, {\n        calcularDestino: this.calcDestino\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 24\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ciudad\",\n          className: \"form-control\",\n          placeholder: \"Bucar en Google Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: e => this.buscar(document.getElementById('ciudad').value, e),\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 18\n      }, this), datos, galeria, horario, rating, comentarios, /*#__PURE__*/_jsxDEV(Lugares, {\n        mostrar: this.state.viewPlaces,\n        lugares: this.state.places,\n        buscar: this.buscar,\n        buscarLugaresCercanos: this.buscarLugaresCercanos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 18\n      }, this), destino, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        className: \"mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default Busqueda;","map":{"version":3,"sources":["/home/jamesgiraldo/Descargas/Evaluaciones_Next_U/27-01-2021/REACT_Lester_Toledo/src/Busqueda.js"],"names":["React","Imagenes","Horario","Rating","Comentarios","Datos","Lugares","Destino","Busqueda","Component","constructor","props","map","service","directionsService","directionsRender","start","marker","addMarker","lat","lng","defineMarker","google","maps","Marker","position","LatLng","push","buscar","name","e","request","query","fields","findPlaceFromQuery","result","status","places","PlacesServiceStatus","OK","request_details","placeId","place_id","getDetails","results","setState","address","formatted_address","location","geometry","hours","hasOwnProperty","opening_hours","weekday_text","rating","reviews","photos","viewPlaces","state","clearMarker","length","visible","splice","buscarLugaresCercanos","radius","Promise","resolve","nearbySearch","calcDestino","mode","setMap","end","origin","destination","travelMode","route","setDirections","componentDidMount","googlePlaceAPILoad","setInterval","window","clearInterval","console","log","Map","document","getElementById","center","zoom","PlacesService","DirectionsService","DirectionsRenderer","render","datos","galeria","horario","comentarios","destino","value"],"mappings":"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","sourcesContent":[" import React from \"react\"\n import './Busqueda.css';\n import Imagenes from \"./Imagenes\";\n import Horario from \"./Horario\";\n import Rating from \"./Rating\"\n import Comentarios from \"./Comentarios\";\n import Datos from \"./Datos\";\n import Lugares from \"./Lugares\";\n import Destino from \"./Destino\";\n\n class Busqueda extends React.Component {\n     constructor(props){\n         super(props)\n         this.state = {\n             name: '',\n             address: '',\n             location: '',\n             hours: '',\n             rating: '',\n             places: '',\n             viewPlaces: false,\n             photos: '',\n             reviews: ''\n         }\n     }\n\n     map = ''\n     service = ''\n     directionsService = ''\n     directionsRender = ''\n     start = ''\n     marker = []\n\n     componentDidMount(){\n         const googlePlaceAPILoad = setInterval(() => {\n             if (window.google){\n                 this.google=window.google;\n                 clearInterval(googlePlaceAPILoad);\n                 console.log('Load Place API');\n                 this.map = new this.google.maps.Map(\n                     document.getElementById('map'), {\n                     center: new this.google.maps.LatLng(this.props.lat,this.props.lng),\n                     zoom: 14 });\n                 this.marker = []\n                 this.addMarker(this.props.lat, this.props.lng)    \n                 this.service = new this.google.maps.places.PlacesService(this.map)\n                 this.directionsService = new this.google.maps.DirectionsService()\n                 this.directionsRender = new this.google.maps.DirectionsRenderer()\n                 this.start = new this.google.maps.LatLng(this.props.lat, this.props.lng)\n             };\n         },100)\n     }\n\n     addMarker = (lat, lng) => {\n         let defineMarker = new this.google.maps.Marker({\n             position: new this.google.maps.LatLng(lat, lng),\n             map: this.map\n         })\n         this.marker.push(defineMarker)\n     }\n\n     buscar = (name, e) => {\n         const request = {\n             query: name,\n             fields: ['place_id']\n         };\n         this.service.findPlaceFromQuery(request, (result, status) => {\n             if(status === this.google.maps.places.PlacesServiceStatus.OK){\n                 const request_details = {\n                     placeId: result[0].place_id,\n                     fields: ['name', 'photo', 'formatted_address', 'rating', 'opening_hours', 'review', 'geometry'] \n                 }\n                 this.service.getDetails(request_details, (results, status) => {\n                     if(status === this.google.maps.places.PlacesServiceStatus.OK){\n                         this.setState({\n                             name: results.name,\n                             address: results.formatted_address,\n                             location: results.geometry.location,\n                             hours: results.hasOwnProperty('opening_hours') ? results.opening_hours.weekday_text : \"\",\n                             rating: results.rating,\n                             reviews: results.reviews,\n                             photos: results.photos,\n                             places: '',\n                             viewPlaces: false\n                         })\n                         this.addMarker(this.state.location.lat(), this.state.location.lng())\n                         this.clearMarker()\n                     }\n                 })\n             }\n         });\n     }\n\n     clearMarker = () => {\n         let length\n         if(this.marker.length > 2){\n             length = this.marker.length-2\n             this.marker[length].visible = false\n             this.marker.splice(length, 1)\n         }\n     }\n\n     buscarLugaresCercanos = () => {\n         const request = {\n             location: this.state.location ? this.state.location : new this.google.maps.LatLng(this.props.lat,this.props.lng),\n             radius: '1000'\n         }\n         return new Promise((resolve => {\n             this.service.nearbySearch(request, (results, status) => {\n                 if(status === this.google.maps.places.PlacesServiceStatus.OK){\n                     this.setState({\n                         places: results,\n                         viewPlaces: true\n                     })\n                     resolve(\"ok\")\n                 }\n             })\n         }))\n        \n     }\n\n     calcDestino = (mode, e) => {\n         this.directionsRender.setMap(this.map)\n         const end = this.state.location\n         const request = {\n             origin: this.start,\n             destination: end,\n             travelMode: mode\n         }\n         this.directionsService.route(request, (result, status) => {\n             if(status === \"OK\"){\n                 this.directionsRender.setDirections(result)\n             }\n         })\n     }\n\n     render(){\n         let datos, galeria, horario, comentarios, rating, destino\n         if (this.state.name){\n             datos = <Datos name={this.state.name} address={this.state.address} />\n         }\n         if (this.state.photos){\n             galeria = <Imagenes photos={this.state.photos} />\n         }\n         if (this.state.hours){\n             horario = <Horario hours={this.state.hours} />\n         }\n         if(this.state.rating){\n             rating = <Rating rating={this.state.rating} />\n         }\n         if(this.state.reviews){\n             comentarios = <Comentarios reviews={this.state.reviews} />\n         }\n         if(this.state.location){\n             destino = <Destino calcularDestino={this.calcDestino}/>\n         }\n         return (\n             <div className=\"container\">\n                 <div className=\"input-group\">\n                    <input type=\"text\" id = 'ciudad' className=\"form-control\" placeholder=\"Bucar en Google Place\"/>\n                       <div className=\"input-group-append\">\n                           <button className=\"btn btn-secondary\" onClick={(e) => this.buscar(document.getElementById('ciudad').value, e)} type=\"button\">\n                               <i className=\"fa fa-search\"/>\n                           </button>\n                       </div>\n                </div>                 \n                 {datos}\n                 {galeria}\n                 {horario}\n                 {rating}\n                 {comentarios}\n                 <Lugares \n                     mostrar={this.state.viewPlaces} \n                     lugares={this.state.places} \n                     buscar={this.buscar} \n                     buscarLugaresCercanos ={this.buscarLugaresCercanos}\n                 />\n                 {destino}                \n                 <div id=\"map\" className='mt-2'></div>\n             </div>\n         );\n     }\n }\n\n export default Busqueda;"]},"metadata":{},"sourceType":"module"}